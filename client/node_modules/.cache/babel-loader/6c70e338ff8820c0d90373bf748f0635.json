{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\client\\\\src\\\\components\\\\map\\\\GoogleMap.js\";\nimport React, { Component } from \"react\";\nimport Cacher from \"../../services/cacher\";\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onScriptLoad = () => {\n      const {\n        address\n      } = this.props;\n      const map = new window.google.maps.Map(this.ref.current, {\n        center: {\n          lat: 0,\n          lng: 0\n        },\n        zoom: 13\n      });\n      this.getLocation(address).then(location => {\n        map.setCenter(location);\n        new window.google.maps.Circle({\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35,\n          map: map,\n          center: location,\n          radius: 500\n        });\n      }, error => {\n        const infowindow = new window.google.maps.InfoWindow({\n          content: \"<div>This location cannot currently be displayed</div>\",\n          maxWidth: 300\n        });\n        map.setOptions({\n          disableDefaultUI: true\n        });\n        infowindow.open(map);\n        infowindow.setPosition({\n          lat: 0,\n          lng: 0\n        });\n      });\n    };\n\n    this.ref = /*#__PURE__*/React.createRef();\n  }\n\n  getLocation(address) {\n    return new Promise((resolve, reject) => {\n      const cacher = new Cacher();\n      let location = cacher.getCacheValue(address);\n\n      if (location) {\n        resolve(location);\n      } else {\n        const geocoder = new window.google.maps.Geocoder();\n        geocoder.geocode({\n          address: `${address}`\n        }, function (results, status) {\n          if (status === \"OK\") {\n            location = results[0].geometry.location;\n            cacher.setCacheValue(address, location);\n            resolve(location);\n          } else {\n            reject(\"ERROR!\");\n          }\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (!window.google) {\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://maps.google.com/maps/api/js?key=AIzaSyCgURx8CJ4iv_GN20xPz3Iall7r4pqwpmU`;\n      var elem = document.getElementsByTagName(\"script\")[0];\n      elem.parentNode.insertBefore(script, elem);\n      script.addEventListener(\"load\", e => {\n        this.onScriptLoad();\n      });\n    } else {\n      this.onScriptLoad();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: `${this.props.height}px`\n      },\n      ref: this.ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GoogleMap;","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/components/map/GoogleMap.js"],"names":["React","Component","Cacher","GoogleMap","constructor","props","onScriptLoad","address","map","window","google","maps","Map","ref","current","center","lat","lng","zoom","getLocation","then","location","setCenter","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","error","infowindow","InfoWindow","content","maxWidth","setOptions","disableDefaultUI","open","setPosition","createRef","Promise","resolve","reject","cacher","getCacheValue","geocoder","Geocoder","geocode","results","status","geometry","setCacheValue","componentDidMount","script","document","createElement","type","src","elem","getElementsByTagName","parentNode","insertBefore","addEventListener","e","render","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cacher from \"../../services/cacher\";\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  onScriptLoad = () => {\n    const { address } = this.props;\n    const map = new window.google.maps.Map(this.ref.current, {\n      center: { lat: 0, lng: 0 },\n      zoom: 13\n    });\n\n    this.getLocation(address).then(\n      location => {\n        map.setCenter(location);\n        new window.google.maps.Circle({\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35,\n          map: map,\n          center: location,\n          radius: 500\n        });\n      },\n      error => {\n        const infowindow = new window.google.maps.InfoWindow({\n          content: \"<div>This location cannot currently be displayed</div>\",\n          maxWidth: 300\n        });\n        map.setOptions({ disableDefaultUI: true });\n        infowindow.open(map);\n        infowindow.setPosition({ lat: 0, lng: 0 });\n      }\n    );\n  };\n\n  getLocation(address) {\n    return new Promise((resolve, reject) => {\n      const cacher = new Cacher();\n      let location = cacher.getCacheValue(address);\n      if (location) {\n        resolve(location);\n      } else {\n        const geocoder = new window.google.maps.Geocoder();\n        geocoder.geocode({ address: `${address}` }, function(results, status) {\n          if (status === \"OK\") {\n            location = results[0].geometry.location;\n            cacher.setCacheValue(address, location);\n            resolve(location);\n          } else {\n            reject(\"ERROR!\");\n          }\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (!window.google) {\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://maps.google.com/maps/api/js?key=AIzaSyCgURx8CJ4iv_GN20xPz3Iall7r4pqwpmU`;\n      var elem = document.getElementsByTagName(\"script\")[0];\n      elem.parentNode.insertBefore(script, elem);\n      script.addEventListener(\"load\", e => {\n        this.onScriptLoad();\n      });\n    } else {\n      this.onScriptLoad();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        style={{ width: \"100%\", height: `${this.props.height}px` }}\n        ref={this.ref}\n      />\n    );\n  }\n}\n\nexport default GoogleMap;\n"]},"metadata":{},"sourceType":"module"}