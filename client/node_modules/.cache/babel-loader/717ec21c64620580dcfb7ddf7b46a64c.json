{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\client\\\\src\\\\components\\\\shared\\\\auth\\\\ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authService from \"../../../services/authService\";\n\nfunction ProtectedRoute(props) {\n  const {\n    component: Component,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authService.isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/components/shared/auth/ProtectedRoute.js"],"names":["React","Route","Redirect","authService","ProtectedRoute","props","component","Component","rest","isAuthenticated","pathname"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,MAAoCH,KAA1C;AACA,sBACE,QAAC,KAAD,OACMG,IADN;AAEE,IAAA,MAAM,EAAEH,KAAK,IACXF,WAAW,CAACM,eAAZ,kBACE,QAAC,SAAD,OAAeJ,KAAf;AAAA,SAA0BG;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAdQN,c;AAgBT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authService from \"../../../services/authService\";\n\nfunction ProtectedRoute(props) {\n  const { component: Component, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authService.isAuthenticated() ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}