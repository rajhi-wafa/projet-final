{"ast":null,"code":"import { FETCH_USER_BOOKINGS_INIT, FETCH_USER_BOOKINGS_SUCCESS, FETCH_USER_BOOKINGS_FAIL } from \"../actions/types\";\nconst INITIAL_STATE = {\n  bookings: {\n    data: [],\n    errors: [],\n    isFetching: false\n  }\n};\nexport const bookingReducer = (state = INITIAL_STATE.bookings, action) => {\n  switch (action.type) {\n    case FETCH_USER_BOOKINGS_INIT:\n      {\n        return { ...state,\n          data: [],\n          errors: [],\n          isFetching: true\n        };\n      }\n\n    case FETCH_USER_BOOKINGS_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          isFetching: false\n        };\n      }\n\n    case FETCH_USER_BOOKINGS_FAIL:\n      {\n        return { ...state,\n          errors: action.payload,\n          isFetching: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/reducers/bookingReducer.js"],"names":["FETCH_USER_BOOKINGS_INIT","FETCH_USER_BOOKINGS_SUCCESS","FETCH_USER_BOOKINGS_FAIL","INITIAL_STATE","bookings","data","errors","isFetching","bookingReducer","state","action","type","payload"],"mappings":"AAAA,SACEA,wBADF,EAEEC,2BAFF,EAGEC,wBAHF,QAIO,kBAJP;AAMA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,EADE;AAERC,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,UAAU,EAAE;AAHJ;AADU,CAAtB;AAQA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,aAAa,CAACC,QAAvB,EAAiCM,MAAjC,KAA4C;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,wBAAL;AAA+B;AAC7B,eAAO,EAAE,GAAGS,KAAL;AAAYJ,UAAAA,IAAI,EAAE,EAAlB;AAAsBC,UAAAA,MAAM,EAAE,EAA9B;AAAkCC,UAAAA,UAAU,EAAE;AAA9C,SAAP;AACD;;AACD,SAAKN,2BAAL;AAAkC;AAChC,eAAO,EAAE,GAAGQ,KAAL;AAAYJ,UAAAA,IAAI,EAAEK,MAAM,CAACE,OAAzB;AAAkCL,UAAAA,UAAU,EAAE;AAA9C,SAAP;AACD;;AACD,SAAKL,wBAAL;AAA+B;AAC7B,eAAO,EAAE,GAAGO,KAAL;AAAYH,UAAAA,MAAM,EAAEI,MAAM,CAACE,OAA3B;AAAoCL,UAAAA,UAAU,EAAE;AAAhD,SAAP;AACD;;AACD;AACE,aAAOE,KAAP;AAXJ;AAaD,CAdM","sourcesContent":["import {\n  FETCH_USER_BOOKINGS_INIT,\n  FETCH_USER_BOOKINGS_SUCCESS,\n  FETCH_USER_BOOKINGS_FAIL\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  bookings: {\n    data: [],\n    errors: [],\n    isFetching: false\n  }\n};\n\nexport const bookingReducer = (state = INITIAL_STATE.bookings, action) => {\n  switch (action.type) {\n    case FETCH_USER_BOOKINGS_INIT: {\n      return { ...state, data: [], errors: [], isFetching: true };\n    }\n    case FETCH_USER_BOOKINGS_SUCCESS: {\n      return { ...state, data: action.payload, isFetching: false };\n    }\n    case FETCH_USER_BOOKINGS_FAIL: {\n      return { ...state, errors: action.payload, isFetching: false };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}