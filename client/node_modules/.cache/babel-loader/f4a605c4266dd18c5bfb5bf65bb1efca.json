{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\client\\\\src\\\\components\\\\register\\\\RegisterForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport FormInput from \"../shared/form/FormInput\";\nimport ResError from \"../shared/form/ResError\";\n\nconst RegisterForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    submitting,\n    submitCb,\n    valid,\n    errors\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(submitCb),\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      name: \"username\",\n      type: \"text\",\n      label: \"Username\",\n      className: \"form-control\",\n      component: FormInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: \"form-control\",\n      component: FormInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: \"form-control\",\n      component: FormInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: \"passwordConfirmation\",\n      type: \"password\",\n      label: \"Password Confirmation\",\n      className: \"form-control\",\n      component: FormInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-bwm btn-form\",\n      type: \"submit\",\n      disabled: !valid || pristine || submitting,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResError, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RegisterForm;\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.username && values.username.length < 4) {\n    errors.username = \"username length is min 4 characters\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Please enter an email!\";\n  }\n\n  if (!values.passwordConfirmation) {\n    errors.passwordConfirmation = \"Please enter password confirmation!\";\n  }\n\n  if (values.password !== values.passwordConfirmation) {\n    errors.password = \"Passwords should match!\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"register\",\n  validate\n})(RegisterForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/components/register/RegisterForm.js"],"names":["React","Field","reduxForm","FormInput","ResError","RegisterForm","props","handleSubmit","pristine","submitting","submitCb","valid","errors","validate","values","username","length","email","passwordConfirmation","password","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA,QAAtC;AAAgDC,IAAAA,KAAhD;AAAuDC,IAAAA;AAAvD,MAAkEN,KAAxE;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEC,YAAY,CAACG,QAAD,CAA5B;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,SAAS,EAAEP;AALb;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,SAAS,EAAEA;AALb;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,SAAS,EAAEA;AALb;AAAA;AAAA;AAAA;AAAA,YAfF,eAsBE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,sBADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAC,uBAHR;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,SAAS,EAAEA;AALb;AAAA;AAAA;AAAA;AAAA,YAtBF,eA6BE;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,CAACQ,KAAD,IAAUH,QAAV,IAAsBC,UAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,eAoCE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEG;AAAlB;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA1CD;;KAAMP,Y;;AA2CN,MAAMQ,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAMF,MAAM,GAAG,EAAf;;AAEA,MAAIE,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,CAAhD,EAAmD;AACjDJ,IAAAA,MAAM,CAACG,QAAP,GAAkB,qCAAlB;AACD;;AAED,MAAI,CAACD,MAAM,CAACG,KAAZ,EAAmB;AACjBL,IAAAA,MAAM,CAACK,KAAP,GAAe,wBAAf;AACD;;AACD,MAAI,CAACH,MAAM,CAACI,oBAAZ,EAAkC;AAChCN,IAAAA,MAAM,CAACM,oBAAP,GAA8B,qCAA9B;AACD;;AAED,MAAIJ,MAAM,CAACK,QAAP,KAAoBL,MAAM,CAACI,oBAA/B,EAAqD;AACnDN,IAAAA,MAAM,CAACO,QAAP,GAAkB,yBAAlB;AACD;;AAED,SAAOP,MAAP;AACD,CAnBD;;AAqBA,eAAeV,SAAS,CAAC;AACvBkB,EAAAA,IAAI,EAAE,UADiB;AAEvBP,EAAAA;AAFuB,CAAD,CAAT,CAGZR,YAHY,CAAf","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport FormInput from \"../shared/form/FormInput\";\nimport ResError from \"../shared/form/ResError\";\n\nconst RegisterForm = props => {\n  const { handleSubmit, pristine, submitting, submitCb, valid, errors } = props;\n  return (\n    <form onSubmit={handleSubmit(submitCb)}>\n      <Field\n        name=\"username\"\n        type=\"text\"\n        label=\"Username\"\n        className=\"form-control\"\n        component={FormInput}\n      />\n      <Field\n        name=\"email\"\n        type=\"email\"\n        label=\"Email\"\n        className=\"form-control\"\n        component={FormInput}\n      />\n      <Field\n        name=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        className=\"form-control\"\n        component={FormInput}\n      />\n      <Field\n        name=\"passwordConfirmation\"\n        type=\"password\"\n        label=\"Password Confirmation\"\n        className=\"form-control\"\n        component={FormInput}\n      />\n      <button\n        className=\"btn btn-bwm btn-form\"\n        type=\"submit\"\n        disabled={!valid || pristine || submitting}\n      >\n        Register\n      </button>\n      <ResError errors={errors} />\n    </form>\n  );\n};\nconst validate = values => {\n  const errors = {};\n\n  if (values.username && values.username.length < 4) {\n    errors.username = \"username length is min 4 characters\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Please enter an email!\";\n  }\n  if (!values.passwordConfirmation) {\n    errors.passwordConfirmation = \"Please enter password confirmation!\";\n  }\n\n  if (values.password !== values.passwordConfirmation) {\n    errors.password = \"Passwords should match!\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"register\",\n  validate\n})(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}