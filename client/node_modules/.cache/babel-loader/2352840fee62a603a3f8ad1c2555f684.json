{"ast":null,"code":"import { FETCH_RENTALS_INIT, FETCH_RENTALS_SUCCESS, FETCH_RENTALS_FAIL, FETCH_RENTAL_BY_ID_INIT, FETCH_RENTAL_BY_ID_SUCCESS, FETCH_RENTAL_BY_ID_FAIL } from \"../actions/types\";\nconst INITIAL_STATE = {\n  rentals: {\n    data: [],\n    errors: [],\n    isFetching: false\n  },\n  rental: {\n    data: {},\n    errors: []\n  }\n};\nexport const rentalsReducer = (state = INITIAL_STATE.rentals, action) => {\n  switch (action.type) {\n    case FETCH_RENTALS_INIT:\n      {\n        return { ...state,\n          data: [],\n          errors: [],\n          isFetching: true\n        };\n      }\n\n    case FETCH_RENTALS_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          isFetching: false\n        };\n      }\n\n    case FETCH_RENTALS_FAIL:\n      {\n        return { ...state,\n          errors: action.payload,\n          isFetching: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const singleRentalReducer = (state = INITIAL_STATE.rental, action) => {\n  switch (action.type) {\n    case FETCH_RENTAL_BY_ID_INIT:\n      {\n        return { ...state,\n          data: {},\n          errors: []\n        };\n      }\n\n    case FETCH_RENTAL_BY_ID_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload\n        };\n      }\n\n    case FETCH_RENTAL_BY_ID_FAIL:\n      {\n        return { ...state,\n          errors: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/reducers/rentalReducer.js"],"names":["FETCH_RENTALS_INIT","FETCH_RENTALS_SUCCESS","FETCH_RENTALS_FAIL","FETCH_RENTAL_BY_ID_INIT","FETCH_RENTAL_BY_ID_SUCCESS","FETCH_RENTAL_BY_ID_FAIL","INITIAL_STATE","rentals","data","errors","isFetching","rental","rentalsReducer","state","action","type","payload","singleRentalReducer"],"mappings":"AAAA,SACEA,kBADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,uBAJF,EAKEC,0BALF,EAMEC,uBANF,QAOO,kBAPP;AASA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,EADC;AAEPC,IAAAA,MAAM,EAAE,EAFD;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADW;AAMpBC,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,MAAM,EAAE;AAFF;AANY,CAAtB;AAYA,OAAO,MAAMG,cAAc,GAAG,CAACC,KAAK,GAAGP,aAAa,CAACC,OAAvB,EAAgCO,MAAhC,KAA2C;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,kBAAL;AAAyB;AACvB,eAAO,EAAE,GAAGa,KAAL;AAAYL,UAAAA,IAAI,EAAE,EAAlB;AAAsBC,UAAAA,MAAM,EAAE,EAA9B;AAAkCC,UAAAA,UAAU,EAAE;AAA9C,SAAP;AACD;;AACD,SAAKT,qBAAL;AAA4B;AAC1B,eAAO,EAAE,GAAGY,KAAL;AAAYL,UAAAA,IAAI,EAAEM,MAAM,CAACE,OAAzB;AAAkCN,UAAAA,UAAU,EAAE;AAA9C,SAAP;AACD;;AACD,SAAKR,kBAAL;AAAyB;AACvB,eAAO,EAAE,GAAGW,KAAL;AAAYJ,UAAAA,MAAM,EAAEK,MAAM,CAACE,OAA3B;AAAoCN,UAAAA,UAAU,EAAE;AAAhD,SAAP;AACD;;AACD;AACE,aAAOG,KAAP;AAXJ;AAaD,CAdM;AAgBP,OAAO,MAAMI,mBAAmB,GAAG,CAACJ,KAAK,GAAGP,aAAa,CAACK,MAAvB,EAA+BG,MAA/B,KAA0C;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,uBAAL;AAA8B;AAC5B,eAAO,EAAE,GAAGU,KAAL;AAAYL,UAAAA,IAAI,EAAE,EAAlB;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAAP;AACD;;AACD,SAAKL,0BAAL;AAAiC;AAC/B,eAAO,EAAE,GAAGS,KAAL;AAAYL,UAAAA,IAAI,EAAEM,MAAM,CAACE;AAAzB,SAAP;AACD;;AACD,SAAKX,uBAAL;AAA8B;AAC5B,eAAO,EAAE,GAAGQ,KAAL;AAAYJ,UAAAA,MAAM,EAAEK,MAAM,CAACE;AAA3B,SAAP;AACD;;AACD;AACE,aAAOH,KAAP;AAXJ;AAaD,CAdM","sourcesContent":["import {\n  FETCH_RENTALS_INIT,\n  FETCH_RENTALS_SUCCESS,\n  FETCH_RENTALS_FAIL,\n  FETCH_RENTAL_BY_ID_INIT,\n  FETCH_RENTAL_BY_ID_SUCCESS,\n  FETCH_RENTAL_BY_ID_FAIL\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  rentals: {\n    data: [],\n    errors: [],\n    isFetching: false\n  },\n  rental: {\n    data: {},\n    errors: []\n  }\n};\n\nexport const rentalsReducer = (state = INITIAL_STATE.rentals, action) => {\n  switch (action.type) {\n    case FETCH_RENTALS_INIT: {\n      return { ...state, data: [], errors: [], isFetching: true };\n    }\n    case FETCH_RENTALS_SUCCESS: {\n      return { ...state, data: action.payload, isFetching: false };\n    }\n    case FETCH_RENTALS_FAIL: {\n      return { ...state, errors: action.payload, isFetching: false };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const singleRentalReducer = (state = INITIAL_STATE.rental, action) => {\n  switch (action.type) {\n    case FETCH_RENTAL_BY_ID_INIT: {\n      return { ...state, data: {}, errors: [] };\n    }\n    case FETCH_RENTAL_BY_ID_SUCCESS: {\n      return { ...state, data: action.payload };\n    }\n    case FETCH_RENTAL_BY_ID_FAIL: {\n      return { ...state, errors: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}