{"ast":null,"code":"import axios from \"axios\";\nimport authService from \"../services/authService\";\nimport axiosService from \"../services/axiosService\";\nimport { FETCH_RENTALS_INIT, FETCH_RENTALS_SUCCESS, FETCH_RENTALS_FAIL, FETCH_RENTAL_BY_ID_INIT, FETCH_RENTAL_BY_ID_SUCCESS, FETCH_RENTAL_BY_ID_FAIL, FETCH_USER_BOOKINGS_INIT, FETCH_USER_BOOKINGS_SUCCESS, FETCH_USER_BOOKINGS_FAIL, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from \"./types\";\nconst axiosInstance = axiosService.getInstance(); //rental actions\n\nexport const fetchRentals = city => {\n  const url = city ? `/api/v1/rentals?city=${city}` : \"/api/v1/rentals\";\n  return dispatch => {\n    dispatch({\n      type: FETCH_RENTALS_INIT\n    });\n    return axios.get(url).then(response => dispatch({\n      type: FETCH_RENTALS_SUCCESS,\n      payload: response.data\n    })).catch(({\n      response\n    }) => dispatch({\n      type: FETCH_RENTALS_FAIL,\n      payload: response.data.errors\n    }));\n  };\n};\nexport const fetchUserRentals = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_RENTALS_INIT\n    });\n    return axiosInstance.get(\"/rentals/manage\").then(response => dispatch({\n      type: FETCH_RENTALS_SUCCESS,\n      payload: response.data\n    })).catch(({\n      response\n    }) => dispatch({\n      type: FETCH_RENTALS_FAIL,\n      payload: response.data.errors\n    }));\n  };\n};\nexport const fetchRental = id => dispatch => {\n  dispatch({\n    type: FETCH_RENTAL_BY_ID_INIT\n  });\n  return axios.get(`/api/v1/rentals/${id}`).then(response => dispatch({\n    type: FETCH_RENTAL_BY_ID_SUCCESS,\n    payload: response.data\n  })).catch(({\n    response\n  }) => dispatch({\n    type: FETCH_RENTAL_BY_ID_FAIL,\n    payload: response.data.errors\n  }));\n};\nexport const createRental = rentalData => {\n  return axiosInstance.post(\"/rentals/\", { ...rentalData\n  }).then(res => res.data, ({\n    response\n  }) => Promise.reject(response.data.errors));\n};\nexport const deleteRental = id => {\n  return axiosInstance.delete(`/rentals/${id}`).then(res => res.data, ({\n    response\n  }) => Promise.reject(response.data.errors));\n}; //booking actions\n\nexport const fetchUserBookings = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_USER_BOOKINGS_INIT\n    });\n    return axiosInstance.get(\"/bookings/manage\").then(response => dispatch({\n      type: FETCH_USER_BOOKINGS_SUCCESS,\n      payload: response.data\n    })).catch(({\n      response\n    }) => dispatch({\n      type: FETCH_USER_BOOKINGS_FAIL,\n      payload: response.data.errors\n    }));\n  };\n}; //auth actions\n\nexport const register = userData => {\n  return axios.post(\"/api/v1/users/register\", { ...userData\n  }).then(res => res.data, ({\n    response\n  }) => Promise.reject(response.data.errors));\n};\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAILURE,\n    errors\n  };\n};\nexport const loginSuccess = () => {\n  const username = authService.getUsername();\n  return {\n    type: LOGIN_SUCCESS,\n    username\n  };\n};\nexport const checkAuthStatus = () => {\n  return dispatch => {\n    if (authService.isAuthenticated()) {\n      return dispatch(loginSuccess());\n    }\n\n    return dispatch({\n      type: LOGOUT\n    });\n  };\n};\nexport const login = userData => {\n  return dispatch => {\n    return axios.post(\"/api/v1/users/auth\", { ...userData\n    }).then(res => res.data).then(token => {\n      authService.saveToken(token);\n      dispatch(loginSuccess());\n    }).catch(({\n      response\n    }) => dispatch(loginFailure(response.data.errors)));\n  };\n};\nexport const logout = () => {\n  authService.invalidateUser();\n  return {\n    type: LOGOUT\n  };\n};\nexport const createBooking = booking => {\n  return axiosInstance.post(\"/bookings\", booking).then(res => res.data).catch(({\n    response\n  }) => Promise.reject(response.data.errors));\n};","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/actions/index.js"],"names":["axios","authService","axiosService","FETCH_RENTALS_INIT","FETCH_RENTALS_SUCCESS","FETCH_RENTALS_FAIL","FETCH_RENTAL_BY_ID_INIT","FETCH_RENTAL_BY_ID_SUCCESS","FETCH_RENTAL_BY_ID_FAIL","FETCH_USER_BOOKINGS_INIT","FETCH_USER_BOOKINGS_SUCCESS","FETCH_USER_BOOKINGS_FAIL","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","axiosInstance","getInstance","fetchRentals","city","url","dispatch","type","get","then","response","payload","data","catch","errors","fetchUserRentals","fetchRental","id","createRental","rentalData","post","res","Promise","reject","deleteRental","delete","fetchUserBookings","register","userData","loginFailure","loginSuccess","username","getUsername","checkAuthStatus","isAuthenticated","login","token","saveToken","logout","invalidateUser","createBooking","booking"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport authService from \"../services/authService\";\nimport axiosService from \"../services/axiosService\";\nimport {\n  FETCH_RENTALS_INIT,\n  FETCH_RENTALS_SUCCESS,\n  FETCH_RENTALS_FAIL,\n  FETCH_RENTAL_BY_ID_INIT,\n  FETCH_RENTAL_BY_ID_SUCCESS,\n  FETCH_RENTAL_BY_ID_FAIL,\n  FETCH_USER_BOOKINGS_INIT,\n  FETCH_USER_BOOKINGS_SUCCESS,\n  FETCH_USER_BOOKINGS_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT\n} from \"./types\";\n\nconst axiosInstance = axiosService.getInstance();\n\n//rental actions\nexport const fetchRentals = city => {\n  const url = city ? `/api/v1/rentals?city=${city}` : \"/api/v1/rentals\";\n  return dispatch => {\n    dispatch({ type: FETCH_RENTALS_INIT });\n    return axios\n      .get(url)\n      .then(response =>\n        dispatch({ type: FETCH_RENTALS_SUCCESS, payload: response.data })\n      )\n      .catch(({ response }) =>\n        dispatch({ type: FETCH_RENTALS_FAIL, payload: response.data.errors })\n      );\n  };\n};\n\nexport const fetchUserRentals = () => {\n  return dispatch => {\n    dispatch({ type: FETCH_RENTALS_INIT });\n    return axiosInstance\n      .get(\"/rentals/manage\")\n      .then(response =>\n        dispatch({ type: FETCH_RENTALS_SUCCESS, payload: response.data })\n      )\n      .catch(({ response }) =>\n        dispatch({ type: FETCH_RENTALS_FAIL, payload: response.data.errors })\n      );\n  };\n};\n\nexport const fetchRental = id => dispatch => {\n  dispatch({ type: FETCH_RENTAL_BY_ID_INIT });\n  return axios\n    .get(`/api/v1/rentals/${id}`)\n    .then(response =>\n      dispatch({ type: FETCH_RENTAL_BY_ID_SUCCESS, payload: response.data })\n    )\n    .catch(({ response }) =>\n      dispatch({ type: FETCH_RENTAL_BY_ID_FAIL, payload: response.data.errors })\n    );\n};\nexport const createRental = rentalData => {\n  return axiosInstance\n    .post(\"/rentals/\", { ...rentalData })\n    .then(\n      res => res.data,\n      ({ response }) => Promise.reject(response.data.errors)\n    );\n};\n\nexport const deleteRental = id => {\n  return axiosInstance\n    .delete(`/rentals/${id}`)\n    .then(\n      res => res.data,\n      ({ response }) => Promise.reject(response.data.errors)\n    );\n};\n\n//booking actions\nexport const fetchUserBookings = () => {\n  return dispatch => {\n    dispatch({ type: FETCH_USER_BOOKINGS_INIT });\n    return axiosInstance\n      .get(\"/bookings/manage\")\n      .then(response =>\n        dispatch({ type: FETCH_USER_BOOKINGS_SUCCESS, payload: response.data })\n      )\n      .catch(({ response }) =>\n        dispatch({\n          type: FETCH_USER_BOOKINGS_FAIL,\n          payload: response.data.errors\n        })\n      );\n  };\n};\n\n//auth actions\nexport const register = userData => {\n  return axios\n    .post(\"/api/v1/users/register\", { ...userData })\n    .then(\n      res => res.data,\n      ({ response }) => Promise.reject(response.data.errors)\n    );\n};\n\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAILURE,\n    errors\n  };\n};\n\nexport const loginSuccess = () => {\n  const username = authService.getUsername();\n  return {\n    type: LOGIN_SUCCESS,\n    username\n  };\n};\n\nexport const checkAuthStatus = () => {\n  return dispatch => {\n    if (authService.isAuthenticated()) {\n      return dispatch(loginSuccess());\n    }\n    return dispatch({ type: LOGOUT });\n  };\n};\n\nexport const login = userData => {\n  return dispatch => {\n    return axios\n      .post(\"/api/v1/users/auth\", { ...userData })\n      .then(res => res.data)\n      .then(token => {\n        authService.saveToken(token);\n        dispatch(loginSuccess());\n      })\n      .catch(({ response }) => dispatch(loginFailure(response.data.errors)));\n  };\n};\n\nexport const logout = () => {\n  authService.invalidateUser();\n  return {\n    type: LOGOUT\n  };\n};\n\nexport const createBooking = booking => {\n  return axiosInstance\n    .post(\"/bookings\", booking)\n    .then(res => res.data)\n    .catch(({ response }) => Promise.reject(response.data.errors));\n};\n"]},"metadata":{},"sourceType":"module"}