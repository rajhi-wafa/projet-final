{"ast":null,"code":"import { GET_CLIENTS } from \"./actionTypes\";\nimport axios from \"axios\";\nexport const getClients = () => dispatch => {\n  axios.get('/api/clients/allClients').then(res => dispatch({\n    type: GET_CLIENTS,\n    payload: res.data\n  })).catch(error => console.log(error));\n};\nexport const addClient = newClient => dispatch => {\n  axios.post('/api/clients/addClient', newClient).then(res => dispatch(getClients())).catch(error => console.log(error));\n};\nexport const deleteClient = idClient => dispatch => {\n  axios.delete(`/api/clients/deleteClient/${idClient}`).then(res => dispatch(getClients())).catch(error => console.log(error));\n};\nexport const putClient = (idClient, updatedClient) => dispatch => {\n  axios.put(`/api/clients/updateClientFromActions/${idClient}`, updatedClient).then(res => dispatch(getClients())).catch(error => console.log(error));\n};\n/*updateClient = async (name, key, value) => {\r\n  let data = [...this.state.data]\r\n  let user = data.find(x => x.name === name)\r\n  if (!user || !value) {\r\n    return 'error try again'\r\n  }\r\n  await axios.put('/updateClientFromActions', { name, key, value })\r\n  await this.componentDidMount()\r\n  return 'Updated successfully'\r\n}\r\naddClient = async (client) => {\r\n  await axios.post('/addClient', client)\r\n  await this.componentDidMount()\r\n}*/","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/redux/actions/action.js"],"names":["GET_CLIENTS","axios","getClients","dispatch","get","then","res","type","payload","data","catch","error","console","log","addClient","newClient","post","deleteClient","idClient","delete","putClient","updatedClient","put"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAC,MAAIC,QAAQ,IAAE;AAClCF,EAAAA,KAAK,CAACG,GAAN,CAAU,yBAAV,EACCC,IADD,CACMC,GAAG,IAAEH,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAACP,WAAN;AAAkBQ,IAAAA,OAAO,EAACF,GAAG,CAACG;AAA9B,GAAD,CADnB,EAECC,KAFD,CAEQC,KAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;AAGC,CAJE;AAMN,OAAO,MAAMG,SAAS,GAAGC,SAAD,IAAcZ,QAAQ,IAAG;AAC9CF,EAAAA,KAAK,CAACe,IAAN,CAAW,wBAAX,EAAoCD,SAApC,EACCV,IADD,CACMC,GAAG,IAAEH,QAAQ,CAACD,UAAU,EAAX,CADnB,EAECQ,KAFD,CAEQC,KAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;AAGD,CAJK;AAMN,OAAO,MAAMM,YAAY,GAAGC,QAAD,IAAaf,QAAQ,IAAG;AACjDF,EAAAA,KAAK,CAACkB,MAAN,CAAc,6BAA4BD,QAAS,EAAnD,EACCb,IADD,CACMC,GAAG,IAAEH,QAAQ,CAACD,UAAU,EAAX,CADnB,EAECQ,KAFD,CAEQC,KAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;AAGD,CAJM;AAMP,OAAO,MAAMS,SAAS,GAAE,CAACF,QAAD,EAAWG,aAAX,KAA4BlB,QAAQ,IAAG;AAC7DF,EAAAA,KAAK,CAACqB,GAAN,CAAW,wCAAuCJ,QAAS,EAA3D,EAA6DG,aAA7D,EACChB,IADD,CACMC,GAAG,IAAEH,QAAQ,CAACD,UAAU,EAAX,CADnB,EAECQ,KAFD,CAEQC,KAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;AAGD,CAJM;AAKP;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { GET_CLIENTS } from \"./actionTypes\"\r\nimport axios from \"axios\"\r\n\r\nexport const getClients=()=>dispatch=>{\r\n    axios.get('/api/clients/allClients')\r\n    .then(res=>dispatch({type:GET_CLIENTS,payload:res.data}))\r\n    .catch((error)=>console.log(error)) \r\n    }\r\n\r\n export const addClient =(newClient) =>dispatch=> {\r\n    axios.post('/api/clients/addClient',newClient)\r\n    .then(res=>dispatch(getClients()))\r\n    .catch((error)=>console.log(error)) \r\n  }\r\n\r\n  export const deleteClient =(idClient) =>dispatch=> {\r\n    axios.delete(`/api/clients/deleteClient/${idClient}`)\r\n    .then(res=>dispatch(getClients()))\r\n    .catch((error)=>console.log(error)) \r\n  }\r\n\r\n  export const putClient =(idClient, updatedClient) =>dispatch=> {\r\n    axios.put(`/api/clients/updateClientFromActions/${idClient}`,updatedClient)\r\n    .then(res=>dispatch(getClients()))\r\n    .catch((error)=>console.log(error)) \r\n  } \r\n  /*updateClient = async (name, key, value) => {\r\n    let data = [...this.state.data]\r\n    let user = data.find(x => x.name === name)\r\n    if (!user || !value) {\r\n      return 'error try again'\r\n    }\r\n    await axios.put('/updateClientFromActions', { name, key, value })\r\n    await this.componentDidMount()\r\n    return 'Updated successfully'\r\n  }\r\n  addClient = async (client) => {\r\n    await axios.post('/addClient', client)\r\n    await this.componentDidMount()\r\n  }*/"]},"metadata":{},"sourceType":"module"}