{"ast":null,"code":"import * as jwt from \"jsonwebtoken\";\nimport * as moment from \"moment\";\n\nclass authService {\n  isValidToken(token) {\n    return moment().isBefore(this.getTokenExpiration(token));\n  }\n\n  getTokenExpiration(token) {\n    const exp = jwt.decode(token).exp;\n    return moment.unix(exp);\n  }\n\n  isAuthenticated() {\n    const token = this.getToken();\n    return token && this.isValidToken(token) ? true : false;\n  }\n\n  saveToken(token) {\n    localStorage.setItem(\"auth_token\", token);\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  decode(token) {\n    return jwt.decode(token);\n  }\n\n  getUsername() {\n    const token = this.getToken();\n    return this.decode(token).username;\n  }\n\n  invalidateUser() {\n    localStorage.removeItem(\"auth_token\");\n  }\n\n}\n\nexport default new authService();","map":{"version":3,"sources":["C:/Users/ASUS/Project/client/src/services/authService.js"],"names":["jwt","moment","authService","isValidToken","token","isBefore","getTokenExpiration","exp","decode","unix","isAuthenticated","getToken","saveToken","localStorage","setItem","getItem","getUsername","username","invalidateUser","removeItem"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,WAAOH,MAAM,GAAGI,QAAT,CAAkB,KAAKC,kBAAL,CAAwBF,KAAxB,CAAlB,CAAP;AACD;;AACDE,EAAAA,kBAAkB,CAACF,KAAD,EAAQ;AACxB,UAAMG,GAAG,GAAGP,GAAG,CAACQ,MAAJ,CAAWJ,KAAX,EAAkBG,GAA9B;AACA,WAAON,MAAM,CAACQ,IAAP,CAAYF,GAAZ,CAAP;AACD;;AACDG,EAAAA,eAAe,GAAG;AAChB,UAAMN,KAAK,GAAG,KAAKO,QAAL,EAAd;AACA,WAAOP,KAAK,IAAI,KAAKD,YAAL,CAAkBC,KAAlB,CAAT,GAAoC,IAApC,GAA2C,KAAlD;AACD;;AACDQ,EAAAA,SAAS,CAACR,KAAD,EAAQ;AACfS,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCV,KAAnC;AACD;;AACDO,EAAAA,QAAQ,GAAG;AACT,WAAOE,YAAY,CAACE,OAAb,CAAqB,YAArB,CAAP;AACD;;AACDP,EAAAA,MAAM,CAACJ,KAAD,EAAQ;AACZ,WAAOJ,GAAG,CAACQ,MAAJ,CAAWJ,KAAX,CAAP;AACD;;AACDY,EAAAA,WAAW,GAAG;AACZ,UAAMZ,KAAK,GAAG,KAAKO,QAAL,EAAd;AACA,WAAO,KAAKH,MAAL,CAAYJ,KAAZ,EAAmBa,QAA1B;AACD;;AACDC,EAAAA,cAAc,GAAG;AACfL,IAAAA,YAAY,CAACM,UAAb,CAAwB,YAAxB;AACD;;AA3Be;;AA8BlB,eAAe,IAAIjB,WAAJ,EAAf","sourcesContent":["import * as jwt from \"jsonwebtoken\";\nimport * as moment from \"moment\";\n\nclass authService {\n  isValidToken(token) {\n    return moment().isBefore(this.getTokenExpiration(token));\n  }\n  getTokenExpiration(token) {\n    const exp = jwt.decode(token).exp;\n    return moment.unix(exp);\n  }\n  isAuthenticated() {\n    const token = this.getToken();\n    return token && this.isValidToken(token) ? true : false;\n  }\n  saveToken(token) {\n    localStorage.setItem(\"auth_token\", token);\n  }\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n  decode(token) {\n    return jwt.decode(token);\n  }\n  getUsername() {\n    const token = this.getToken();\n    return this.decode(token).username;\n  }\n  invalidateUser() {\n    localStorage.removeItem(\"auth_token\");\n  }\n}\n\nexport default new authService();\n"]},"metadata":{},"sourceType":"module"}